@using JustInTimeCompany.Models.ViewModels
@model FlightEditViewModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}


@{
    ViewBag.Title = "Ajouter un vol";
    ViewBag.FormAction = "Create";
    ViewBag.ButtonValue = "Ajouter le vol";
}

<h1>Créer un vol</h1>
<p id="ok"></p>
<div id="pilotList"></div>

<partial name="_FlightForm" model=Model/>

@section Scripts{
    <script>
        function getPilots(landing, takeoff){
            let statusMessage = document.createElement('p');
            let url = '@Url.Action("GetPilotsJson","Flight")';
            let data = {"Landing" : landing, "TakeOff": takeoff };
            let params = `?TakeOff=${landing}&Landing=${landing}`;

            fetch(url + params,
            {
                method : 'get',
                headers: {
                    "Content-Type": "application/json; charset=utf-8",
                    "RequestVerificationToken": "@GetAntiXsrfRequestToken()"
                }
            })
            .then(response => {
                if (!response.ok){
                    throw new Error(`[${response.status}]: ${response.statusText} `);
                }
                return response;
            })
            .then(response => response.json())
            .then(pilotArray => {
                let pilotlist = document.getElementById("pilotList");
                pilotArray.forEach(p => {
                    let pilotChoice = document.createElement("p");
                    pilotChoice.innerHTML = `${p.id} ${p.name}`;
                    pilotlist.appendChild(pilotChoice);
                })
            })
            .catch(error => {
                document.getElementById('ok').innerHTML = `Exception: ${error.message}`;
            });
            }

            getPilots("05-10-22 15:30:00","05-10-22 15:40:00");
    </script>
}