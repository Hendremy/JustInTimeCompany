@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<script src="~/js/flightForm.js" asp-append-version="true"></script>
<script type="module">
    let from = document.getElementById("Flight_FromId");
    let to = document.getElementById("Flight_ToId");
    let takeOff = document.getElementById("Flight_Schedule_TakeOff");
    let landing = document.getElementById("Flight_Schedule_Landing");
    let distance = document.getElementById("airportDistance");
    let pilots = document.getElementById("Flight_PilotId");
    let pilotsText = document.getElementById("pilotText");

    function airportChosen(){
        if(from.value > 0 && to.value > 0){
            let url = '@Url.Action("GetAirportDistance","Flight")'
            let token = '@GetAntiXsrfRequestToken()';
            getDistance(from.value, to.value, url, token)
            .then(response => {
                distance.innerText = `${response} km`;
            })
            .catch(error => {
                distance.innerText = '0 km';
            });
        }
    };
        
    from.addEventListener('change', airportChosen);
    to.addEventListener('change', airportChosen);

    airportChosen();

    function scheduleChosen(){
        if(Date.parse(landing.value) >= Date.now() && Date.parse(takeOff.value) >= Date.now()){
            let url = '@Url.Action("GetPilotsJson","Flight")'
            let token = '@GetAntiXsrfRequestToken()';
            getPilots(takeOff.value, landing.value, url, token)
            .then(pilotArray => {
                if(pilotArray.length > 0){
                    hidePilotsText();
                    displayPilots(pilotArray);
                }else{
                    hidePilots();
                    showPilotsText();
                    changePilotsText('Aucun pilote disponible')
                }
                
            })
            .catch(error => {
                pilots.innerText = 'Erreur : Veuillez réessayer';
                hidePilots();
                showPilotsText();
            });
        }else{
            hidePilots();
            showPilotsText();
        }
    };
        
    landing.addEventListener('change', scheduleChosen);
    takeOff.addEventListener('change', scheduleChosen);

    scheduleChosen();

    function displayPilots(pilotList){
        pilots.hidden = false;
        pilots.innerHTML = '';
        pilotList.forEach(p => {
            pilots.innerHTML += `<option value=${p.id}>${p.name}</option>`;
        });
    }

    function hidePilots(){
        pilots.hidden = true;
        pilots.innerHTML = '';
    };

    function hidePilotsText(){
        pilotsText.hidden = true;
    };

    function showPilotsText(){
        pilotsText.hidden = false;
    };

    function changePilotsText(message){
        pilotsText.innerText = message;
    }

    </script>